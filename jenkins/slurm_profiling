#!/bin/bash
#SBATCH --partition build
#SBATCH --time 00-01:00:00
#SBATCH --qos gpu
#SBATCH --gres gpu:1
#SBATCH --mem 40G
#SBATCH --cpus-per-task 1

export OMP_NUM_THREADS=$SLURM_CPUS_PER_TASK
export OPENBLAS_NUM_THREADS=1
export MKL_NUM_THREADS=1
export VECLIB_MAXIMUM_THREADS=1
export NUMEXPR_NUM_THREADS=1

# Set profiling switches
# -----------------------------------------------------------------------------
RUN_CPROFILE="${PROFILE_CPROFILE:-0}"
RUN_NSIGHT="${PROFILE_NSIGHT:-0}"
RUN_VTUNE="${PROFILE_VTUNE:-0}"
RUN_ADVISOR="${PROFILE_ADVISOR:-0}"

set -e

# $1: absolute path to bluebild Bash library
# -----------------------------------------------------------------------------
source "$1"

# $2: Python script to run
# -----------------------------------------------------------------------------
bb_check_input_file "$2"

STACK=gcc

bb_load_stack $STACK
bb_activate_venv
PYTHON=$(which python)
bb_print_env
bb_print_jenkins_env

$(bb_check_output_dir ${TEST_DIR})

export BB_EARLY_EXIT=1

if [[ "${RUN_CPROFILE}" == "1" ]]; then
    echo "### cProfile"
    "${PYTHON}" -m cProfile -o "${TEST_DIR}/cProfile.out" "${@:2}"
    echo; echo
fi

if [[ "${RUN_NSIGHT}" == "1" ]]; then
    NSIGHT_DIR="${TEST_DIR}/nsight"
    mkdir -v $NSIGHT_DIR
    nsys profile --output "${NSIGHT_DIR}/nsys" --force-overwrite=true --stats=true -t nvtx,cuda "${PYTHON}" "${@:2}"
    ncu          --export "${NSIGHT_DIR}/ncu"  --force-overwrite --set detailed --target-processes all "${PYTHON}" "${@:2}"
fi

if [[ "${RUN_VTUNE}" == "1" ]]; then
    bb_vtune_hotspots           "${TEST_DIR}" "${PYTHON}" "${@:2}"
    bb_vtune_hpc_performance    "${TEST_DIR}" "${PYTHON}" "${@:2}"
    bb_vtune_memory_consumption "${TEST_DIR}" "${PYTHON}" "${@:2}"
fi

if [[ "${RUN_ADVISOR}" == "1" ]]; then
    bb_advisor_roofline "${TEST_DIR}" "${PYTHON}" "${@:2}"
fi
